// Font face
/* stylelint-disable */
@mixin font-face($font-family, $url, $weight, $style) {
	@font-face {
		font-family: '#{$font-family}';
		src: url('../fonts/#{$url}.woff2') format('woff2');
		font-weight: #{$weight};
		font-display: swap;
		font-style: $style;
	}
}

// Responsive Font
@mixin adaptiv-font($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$maxWidth: $maxWidth - 320;
	font-size: calc(
		#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth})
	);
}

// Mixins
@mixin easeOut {
	transition: all 0.3s ease-out;
}

@mixin border-radius {
	border-radius: 0.5rem;
}

@mixin round-radius {
	border-radius: 50%;
}

// Media Query Mixins

@mixin mediaSm {
	@media screen and (max-width: 425px) {
		@content;
	}
}

@mixin mediaMd {
	@media screen and (min-width: 426px) and (max-width: 767px) {
		@content;
	}
}

@mixin mediaLg {
	@media screen and (min-width: 768px) and (max-width: 1025px) {
		@content;
	}
}

// Image set
@mixin image-set($pathToImage) {
	background-image: url('#{$pathToImage}.jpg');
	/* stylelint-disable-next-line declaration-block-no-duplicate-properties */
	background-image: image-set(
		/* stylelint-disable-next-line function-comma-newline-after */
			'#{$pathToImage}.avif' type('image/avif'),
		'#{$pathToImage}.webp' type('image/webp'),
		'#{$pathToImage}.jpg' type('image/jpg')
	);
}

// Dark overlay
@mixin overlay {
	&::before {
		content: '';
		position: absolute;
		inset: 0;
		background-image: $gradient;
	}
}

// Background cover
@mixin bg-cover {
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
}

// Not hover on touch screens
@mixin hover {
	@media (any-hover: hover) {
		&:hover {
			@content;
		}
	}
}
